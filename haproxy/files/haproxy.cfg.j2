#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2
    debug 4
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

### amjta.ca Website SSL Certifcate #########################
frontend amjta.ca
    bind 0.0.0.0:80
    bind 0.0.0.0:443 ssl crt /etc/ssl/amjta.ca/amjta.ca.pem alpn h2.http/1.1
    http-request redirect scheme https if { hdr(Host) -i amjta.ca } !{ ssl_fc }
    mode http
    acl path-content          path_beg /wp-content
    acl path-content-login    path wp-content/wp-login.php
    acl path-content-admin    path_beg /wp-admin
    acl hsts_exists res.hdr_cnt(Strict-Transport-Security) gt 0
    http-response add-header Strict-Transport-Security max-age=31536000;\ includeSubDomains if ! hsts_exists
    timeout client 10s 
    use_backend amjtanodes if { hdr(host) -i amjta.ca }
    use_backend amjtanodes if { hdr(host) -i www.amjta.ca }


backend amjtanodes
    mode http
    server web01 10.101.101.100:80
    timeout connect 20s 
    timeout server 20s 
    http-request add-header X-Forwarded-Proto https
    http-response set-header Content-Security-Policy upgrade-insecure-requests
### amjta.ca Website SSL Certifcate #########################
